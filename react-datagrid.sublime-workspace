{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"text",
				"textPadding"
			],
			[
				"dragC",
				"dragColumn"
			],
			[
				"drag",
				"dragging"
			],
			[
				"col",
				"columns"
			],
			[
				"co",
				"columns"
			],
			[
				"group",
				"groupData"
			],
			[
				"getR",
				"getGroupedRows"
			],
			[
				"grou",
				"groupData"
			],
			[
				"render",
				"renderCount"
			],
			[
				"rener",
				"renderCount"
			],
			[
				"vir",
				"virtualRendering"
			],
			[
				"row",
				"rowsCount"
			],
			[
				"cell",
				"cellStyle"
			],
			[
				"cel",
				"cellProps"
			],
			[
				"re",
				"require"
			],
			[
				"table",
				"tableProps"
			],
			[
				"ta",
				"tableChildren"
			],
			[
				"tabl",
				"tableStyle"
			],
			[
				"tab",
				"tableProps"
			],
			[
				"has",
				"hasOwn"
			],
			[
				"nextC",
				"nextColumnSize"
			],
			[
				"next",
				"nextColumn"
			],
			[
				"second",
				"secondCol"
			],
			[
				"first",
				"firstSize"
			],
			[
				"resize",
				"resizeInfo"
			],
			[
				"resi",
				"resizeInfo"
			],
			[
				"find",
				"findIndexBy"
			],
			[
				"resoze",
				"resizeProxyLeft"
			],
			[
				"resizeP",
				"resizeProxyLeft"
			],
			[
				"resiezPro",
				"resizeProxyLeft"
			],
			[
				"onMo",
				"onMouseDown"
			],
			[
				"colum",
				"columns"
			],
			[
				"dragCo",
				"dragColumnIndex"
			],
			[
				"itR",
				"itRegion"
			],
			[
				"column",
				"columnData"
			],
			[
				"header",
				"headerNode"
			],
			[
				"menu",
				"menuColumn"
			],
			[
				"target",
				"targetRegion"
			],
			[
				"React",
				"ReactMenu"
			],
			[
				"flex",
				"flexible"
			],
			[
				"dir",
				"dirSign"
			],
			[
				"handle",
				"handleClick"
			],
			[
				"sort",
				"sortInfo"
			],
			[
				"pos",
				"position"
			],
			[
				"prop",
				"propName"
			],
			[
				"delta",
				"deltaY"
			],
			[
				"del",
				"deltaY"
			],
			[
				"is",
				"isVirtualRendering"
			],
			[
				"scro",
				"scrollTop"
			],
			[
				"pro",
				"props"
			],
			[
				"wrapp",
				"wrapperProps"
			],
			[
				"de",
				"delta"
			],
			[
				"onS",
				"onScrollTop"
			],
			[
				"sc",
				"scrollTop"
			],
			[
				"scroll",
				"scrollTop"
			],
			[
				"cellP",
				"cellProps"
			],
			[
				"Cell",
				"CellFactory"
			],
			[
				"scrol",
				"scrollLeft"
			],
			[
				"th",
				"thisProps"
			],
			[
				"preapreCo",
				"prepareColumnStyle"
			],
			[
				"prepare",
				"prepareColumnStyle"
			],
			[
				"colu",
				"columnStyle"
			],
			[
				"Wra",
				"WrapperFactory"
			],
			[
				"wra",
				"WrapperFactory"
			],
			[
				"handleMou",
				"handleMouseOver"
			],
			[
				"get",
				"getDefaultProps"
			],
			[
				"Reat",
				"ReactWindow"
			],
			[
				"isS",
				"isStyleIndex"
			],
			[
				"Rende",
				"RendererFactory"
			],
			[
				"Re",
				"Renderer"
			],
			[
				"snap",
				"snapDirections"
			],
			[
				"SNA",
				"SNAP_CONFIG"
			],
			[
				"snapD",
				"snapDirections"
			],
			[
				"snapOn",
				"snapOnResize"
			],
			[
				"split",
				"splitterDOMNode"
			],
			[
				"f",
				"function"
			],
			[
				"handleSp",
				"handleSplitterDragStart"
			],
			[
				"dis",
				"displayProperty"
			],
			[
				"onSpl",
				"onSplitterDragStart"
			],
			[
				"getItem",
				"getItemComponent"
			],
			[
				"item",
				"itemOrId"
			],
			[
				"active",
				"activeTitleStyle"
			],
			[
				"dele",
				"deleteProps"
			],
			[
				"clone",
				"cloneItems"
			],
			[
				"onMenu",
				"onMenuClick"
			],
			[
				"window",
				"windowHideLayerListener"
			],
			[
				"tar",
				"targetRegion"
			],
			[
				"bor",
				"borderWidth"
			],
			[
				"scroller",
				"scrollerArrowColor"
			],
			[
				"ba",
				"background"
			],
			[
				"sele",
				"selectedIndex"
			],
			[
				"slee",
				"selectedIndex"
			],
			[
				"selec",
				"selectedIndexes"
			],
			[
				"ac",
				"activeIndex"
			],
			[
				"acce",
				"acceptsItems"
			],
			[
				"getE",
				"getRenderProps"
			],
			[
				"isSty",
				"isStyleProp"
			],
			[
				"P",
				"PROXY_ELEMENTS"
			],
			[
				"itemCom",
				"itemComponent"
			],
			[
				"renderPO",
				"renderProxy"
			],
			[
				"Tab",
				"TabPanel"
			],
			[
				"getRed",
				"getRenderChildren"
			],
			[
				"proper",
				"properties"
			],
			[
				"snapTo",
				"snapToGridRegion"
			],
			[
				"initi",
				"initialRegionInCanvas"
			],
			[
				"ha",
				"halfWidth"
			],
			[
				"xCe",
				"xCenters"
			],
			[
				"hori",
				"horizontalCenter"
			],
			[
				"ver",
				"verticalCenter"
			],
			[
				"xCenter",
				"xCenterResults"
			],
			[
				"xC",
				"xCenterAbsDiff"
			],
			[
				"yCen",
				"yCenterAbsDiff"
			],
			[
				"itemM",
				"itemMiddleX"
			],
			[
				"xM",
				"xMiddle"
			],
			[
				"yM",
				"yMiddles"
			],
			[
				"dragItem",
				"dragItem"
			],
			[
				"dropTa",
				"dropTargetArgs"
			],
			[
				"cons",
				"constrainRegion"
			],
			[
				"dra",
				"draggedItems"
			],
			[
				"onItem",
				"onItemMouseDown"
			],
			[
				"DRA",
				"DRAG_ITEM"
			],
			[
				"absD",
				"absDiff22"
			],
			[
				"sec",
				"second"
			],
			[
				"firs",
				"firstAbsDiff"
			],
			[
				"fir",
				"firstDiff"
			],
			[
				"bui",
				"buildResults"
			],
			[
				"secon",
				"secondSnapValue"
			],
			[
				"verti",
				"verticalStyle"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/index.jsx",
			"settings":
			{
				"buffer_size": 13054,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/getDefaultProps.js",
			"settings":
			{
				"buffer_size": 804,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 21 files for \"nestingWidth\"\n\n/home/radu/code/react-datagrid/src/getDefaultProps.js:\n   25          rowHeight: 31,\n   26  \n   27:         groupNestingWidth: 20,\n   28  \n   29          defaultStyle: {\n\n/home/radu/code/react-datagrid/src/render/getGroupedRows.jsx:\n   17                  if (cellProps.index === 0){\n   18                      cellProps.innerStyle = {\n   19:                         paddingLeft: depth * props.groupNestingWidth\n   20                      }\n   21                  }\n   ..\n   34  \n   35      var style = {\n   36:         paddingLeft: (groupData.depth - 1)* props.groupNestingWidth\n   37      }\n   38  \n\n3 matches across 2 files\n\n\nSearching 21 files for \"column.render\"\n\n/home/radu/code/react-datagrid/src/Row/index.jsx:\n   90          }\n   91  \n   92:         if (typeof column.render == 'function'){\n   93:             text = column.render(text, props.data, cellProps)\n   94          }\n   95  \n\n2 matches in 1 file\n\n\nSearching 21 files for \"scrollby\"\n\n/home/radu/code/react-datagrid/src/Wrapper/index.jsx:\n  134          }\n  135  \n  136:         if (virtual && props.scrollBy){\n  137:             deltaY = signum(deltaY) * props.scrollBy * props.rowHeight\n  138          }\n  139  \n\n/home/radu/code/react-datagrid/src/getDefaultProps.js:\n    7          cellPadding: 5,\n    8          scrollbarSize: 16,\n    9:         scrollBy: undefined,\n   10          virtualRendering: true,\n   11  \n\n/home/radu/code/react-datagrid/src/index.jsx:\n   58           */\n   59          columnMinWidth   : PropTypes.numeric,\n   60:         scrollBy         : PropTypes.numeric,\n   61          rowHeight        : PropTypes.numeric,\n   62          sortInfo         : PropTypes.sortInfo,\n\n4 matches across 3 files\n\n\nSearching 21 files for \"scrollby\"\n\n/home/radu/code/react-datagrid/src/Wrapper/index.jsx:\n  134          }\n  135  \n  136:         if (virtual && props.scrollBy){\n  137:             deltaY = signum(deltaY) * props.scrollBy * props.rowHeight\n  138          }\n  139  \n\n/home/radu/code/react-datagrid/src/getDefaultProps.js:\n    8          scrollbarSize: 16,\n    9  \n   10:         //scrollBy: undefined\n   11          virtualRendering: true,\n   12  \n\n/home/radu/code/react-datagrid/src/index.jsx:\n   58           */\n   59          columnMinWidth   : PropTypes.numeric,\n   60:         scrollBy         : PropTypes.numeric,\n   61          rowHeight        : PropTypes.numeric,\n   62          sortInfo         : PropTypes.sortInfo,\n\n4 matches across 3 files\n\n\nSearching 21 files for \"rowHeight\"\n\n/home/radu/code/react-datagrid/src/PropTypes.js:\n   12      numeric: val(function(value){\n   13          if (value * 1 != value){\n   14:             return new Error('Invalid rowHeight value')\n   15          }\n   16      }),\n\n/home/radu/code/react-datagrid/src/Row/index.jsx:\n  123          var style = assign({}, props.defaultStyle, props.style)\n  124  \n  125:         style.height = props.rowHeight\n  126  \n  127          return style\n\n/home/radu/code/react-datagrid/src/Wrapper/index.jsx:\n   18          totalColumnWidth: React.PropTypes.number,\n   19          cellPadding     : React.PropTypes.number,\n   20:         rowHeight       : React.PropTypes.any,\n   21  \n   22          data            : React.PropTypes.array,\n   ..\n   63  \n   64          var horizontalScrollerSize = props.totalColumnWidth + props.scrollbarSize\n   65:         var verticalScrollerSize   = (props.totalLength + groupsCount) * props.rowHeight\n   66  \n   67          return (\n   68:             <div className=\"z-wrapper\" style={{height: rowsCount * props.rowHeight}}>\n   69                  <div ref=\"tableWrapper\" className=\"z-table-wrapper\" style={{paddingRight: props.scrollbarSize}} onWheel={this.handleWheel}>\n   70                      {table}\n   ..\n  108          var props  = this.props\n  109          var result = props.virtualRendering?\n  110:                         (props.totalLength + this.groupsCount || 0) * props.rowHeight:\n  111                          this.refs.table.getDOMNode().offsetHeight\n  112  \n  ...\n  124  \n  125          var scrollTop = virtual?\n  126:                             props.startIndex * props.rowHeight:\n  127                              props.scrollTop\n  128  \n  129:         if (virtual && deltaY < 0 && -deltaY < props.rowHeight){\n  130              //when scrolling to go up, account for the case where abs(deltaY)\n  131:             //is less than the rowHeight, as this results in no scrolling\n  132              //so make sure it's at least deltaY\n  133:             deltaY = -props.rowHeight\n  134          }\n  135  \n  136          if (virtual && props.scrollBy){\n  137:             deltaY = signum(deltaY) * props.scrollBy * props.rowHeight\n  138          }\n  139  \n\n/home/radu/code/react-datagrid/src/getDefaultProps.js:\n   25          styleAlternateRows: true,\n   26          cellEllipsis: true,\n   27:         rowHeight: 31,\n   28  \n   29          groupNestingWidth: 20,\n\n/home/radu/code/react-datagrid/src/index.jsx:\n   59          columnMinWidth   : PropTypes.numeric,\n   60          scrollBy         : PropTypes.numeric,\n   61:         // rowHeight        : PropTypes.numeric,\n   62          sortInfo         : PropTypes.sortInfo,\n   63          columns          : PropTypes.column\n   ..\n  105  \n  106          if (this.props.virtualRendering){\n  107:             state.renderStartIndex = Math.ceil(scrollTop / this.props.rowHeight)\n  108          } else {\n  109              state.scrollTop = scrollTop\n  ...\n  129                  maxHeight = window.screen.height\n  130              }\n  131:             rowCount = Math.floor(maxHeight / props.rowHeight)\n  132          }\n  133  \n  ...\n  265  \n  266          if (props.virtualRendering){\n  267:             scrollTop = startIndex * props.rowHeight\n  268          }\n  269  \n\n/home/radu/code/react-datagrid/src/render/getGroupedRows.jsx:\n   42      }\n   43  \n   44:     return <Row className='z-group-row' key={'group-'+groupData.valuePath} rowHeight={props.rowHeight}>\n   45          <Cell\n   46              className='z-group-cell'\n\n/home/radu/code/react-datagrid/src/render/renderRow.jsx:\n   20          renderText : props.renderText,\n   21          cellPadding: props.cellPadding,\n   22:         rowHeight  : props.rowHeight,\n   23          columns    : props.columns\n   24      }\n\n20 matches across 7 files\n\n\nSearching 21 files for \"rowHeight\"\n\n/home/radu/code/react-datagrid/src/PropTypes.js:\n   12      numeric: val(function(value){\n   13          if (value * 1 != value){\n   14:             return new Error('Invalid rowHeight value')\n   15          }\n   16      }),\n\n/home/radu/code/react-datagrid/src/Row/index.jsx:\n  123          var style = assign({}, props.defaultStyle, props.style)\n  124  \n  125:         style.height = props.rowHeight\n  126  \n  127          return style\n\n/home/radu/code/react-datagrid/src/Wrapper/index.jsx:\n   18          totalColumnWidth: React.PropTypes.number,\n   19          cellPadding     : React.PropTypes.number,\n   20:         rowHeight       : React.PropTypes.any,\n   21  \n   22          data            : React.PropTypes.array,\n   ..\n   63  \n   64          var horizontalScrollerSize = props.totalColumnWidth + props.scrollbarSize\n   65:         var verticalScrollerSize   = (props.totalLength + groupsCount) * props.rowHeight\n   66  \n   67          return (\n   68:             <div className=\"z-wrapper\" style={{height: rowsCount * props.rowHeight}}>\n   69                  <div ref=\"tableWrapper\" className=\"z-table-wrapper\" style={{paddingRight: props.scrollbarSize}} onWheel={this.handleWheel}>\n   70                      {table}\n   ..\n  108          var props  = this.props\n  109          var result = props.virtualRendering?\n  110:                         (props.totalLength + this.groupsCount || 0) * props.rowHeight:\n  111                          this.refs.table.getDOMNode().offsetHeight\n  112  \n  ...\n  124  \n  125          var scrollTop = virtual?\n  126:                             props.startIndex * props.rowHeight:\n  127                              props.scrollTop\n  128  \n  129:         if (virtual && deltaY < 0 && -deltaY < props.rowHeight){\n  130              //when scrolling to go up, account for the case where abs(deltaY)\n  131:             //is less than the rowHeight, as this results in no scrolling\n  132              //so make sure it's at least deltaY\n  133:             deltaY = -props.rowHeight\n  134          }\n  135  \n  136          if (virtual && props.scrollBy){\n  137:             deltaY = signum(deltaY) * props.scrollBy * props.rowHeight\n  138          }\n  139  \n\n/home/radu/code/react-datagrid/src/getDefaultProps.js:\n   25          styleAlternateRows: true,\n   26          cellEllipsis: true,\n   27:         rowHeight: 31,\n   28  \n   29          groupNestingWidth: 20,\n\n/home/radu/code/react-datagrid/src/index.jsx:\n   59          columnMinWidth   : PropTypes.numeric,\n   60          scrollBy         : PropTypes.numeric,\n   61:         // rowHeight        : PropTypes.numeric,\n   62          sortInfo         : PropTypes.sortInfo,\n   63          columns          : PropTypes.column\n   ..\n  105  \n  106          if (this.props.virtualRendering){\n  107:             state.renderStartIndex = Math.ceil(scrollTop / this.props.rowHeight)\n  108          } else {\n  109              state.scrollTop = scrollTop\n  ...\n  129                  maxHeight = window.screen.height\n  130              }\n  131:             rowCount = Math.floor(maxHeight / props.rowHeight)\n  132          }\n  133  \n  ...\n  265  \n  266          if (props.virtualRendering){\n  267:             scrollTop = startIndex * props.rowHeight\n  268          }\n  269  \n\n/home/radu/code/react-datagrid/src/render/getGroupedRows.jsx:\n   42      }\n   43  \n   44:     return <Row className='z-group-row' key={'group-'+groupData.valuePath} rowHeight={props.rowHeight}>\n   45          <Cell\n   46              className='z-group-cell'\n\n/home/radu/code/react-datagrid/src/render/renderRow.jsx:\n   20          renderText : props.renderText,\n   21          cellPadding: props.cellPadding,\n   22:         rowHeight  : props.rowHeight,\n   23          columns    : props.columns\n   24      }\n\n20 matches across 7 files\n",
			"settings":
			{
				"buffer_size": 10162,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/Wrapper/index.jsx",
			"settings":
			{
				"buffer_size": 5240,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/render/renderRow.jsx",
			"settings":
			{
				"buffer_size": 1270,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Cell/index.jsx",
			"settings":
			{
				"buffer_size": 2187,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/render/renderTable.jsx",
			"settings":
			{
				"buffer_size": 636,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Header/index.jsx",
			"settings":
			{
				"buffer_size": 10317,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.jsx",
			"settings":
			{
				"buffer_size": 11202,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/render/slice.js",
			"settings":
			{
				"buffer_size": 243,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/render/getGroupedRows.jsx",
			"settings":
			{
				"buffer_size": 2048,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Row/index.jsx",
			"settings":
			{
				"buffer_size": 3035,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/PropTypes.js",
			"settings":
			{
				"buffer_size": 1104,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 390.0,
		"selected_items":
		[
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"du",
				"File: Duplicate"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"move",
				"File: Move"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"ss javas",
				"Set Syntax: JavaScript"
			],
			[
				"dup",
				"File: Duplicate"
			],
			[
				"enable lin",
				"SublimeLinter: Enable Linting"
			],
			[
				"disa",
				"SublimeLinter: Disable Linting"
			],
			[
				"dee",
				"File: Delete"
			],
			[
				"re",
				"File: Rename"
			],
			[
				"linter",
				"SublimeLinter: Lint This View"
			],
			[
				"ss javasc",
				"Set Syntax: JavaScript"
			],
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"lint ",
				"SublimeLinter: Lint This View"
			],
			[
				"sublime linter li",
				"SublimeLinter: Lint This View"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"delete",
				"File: Delete"
			],
			[
				"mardk",
				"Markdown Preview: Preview in Browser"
			],
			[
				"del",
				"File: Delete"
			],
			[
				"deke",
				"Bower: Discover packages"
			],
			[
				"ss json",
				"Set Syntax: JSON"
			],
			[
				"markd",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdo",
				"Markdown Preview: Preview in Browser"
			],
			[
				"renam",
				"File: Rename"
			],
			[
				"Rena",
				"File: Rename"
			],
			[
				"de",
				"File: Delete"
			],
			[
				"ss sass",
				"Set Syntax: Sass"
			],
			[
				"brows",
				"Preferences: Browse Packages"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"ss text",
				"Set Syntax: Plain Text"
			],
			[
				"jsx	",
				"Snippet: React: /** @jsx */"
			],
			[
				"ss ja",
				"Set Syntax: Jade"
			],
			[
				"ss js",
				"Set Syntax: JSON"
			],
			[
				"pretty j",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pretty ",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pretty json",
				"Pretty JSON: JSON 2 XML"
			],
			[
				"json p",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pretty",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"markdow",
				"Markdown Preview: Preview in Browser"
			],
			[
				"ss sa",
				"Set Syntax: Sass"
			],
			[
				"ss sty",
				"Set Syntax: Stylus"
			],
			[
				"ss java",
				"Set Syntax: JavaScript"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"ss live",
				"Set Syntax: LiveScript"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/radu/code/react-datagrid",
		"/home/radu/code/react-datagrid/node_modules",
		"/home/radu/code/react-datagrid/node_modules/drag-helper",
		"/home/radu/code/react-datagrid/src",
		"/home/radu/code/react-datagrid/src/Cell",
		"/home/radu/code/react-datagrid/src/Header",
		"/home/radu/code/react-datagrid/src/Row",
		"/home/radu/code/react-datagrid/src/Wrapper",
		"/home/radu/code/react-datagrid/src/models",
		"/home/radu/code/react-datagrid/src/render",
		"/home/radu/code/react-datagrid/style"
	],
	"file_history":
	[
		"/home/radu/code/react-datagrid/node_modules/dummy-data/node_modules/bluebird/js/main/promise_resolver.js",
		"/home/radu/code/react-datagrid/package.json",
		"/home/radu/code/react-datagrid/node_modules/react/lib/ReactElement.js",
		"/home/radu/code/react-datagrid/style/resize.styl",
		"/home/radu/code/react-datagrid/src/render/renderTable.jsx",
		"/home/radu/code/react-datagrid/src/getDefaultProps.js",
		"/home/radu/code/react-datagrid/node_modules/react/lib/getEventKey.js",
		"/home/radu/code/react-datagrid/src/Wrapper/index.jsx",
		"/home/radu/code/react-datagrid/src/render/renderRow.jsx",
		"/home/radu/code/react-datagrid/src/Cell/index.jsx",
		"/home/radu/code/react-datagrid/src/Header/setupColumnDrag.js",
		"/home/radu/code/react-datagrid/src/render/getGroupedRows.jsx",
		"/home/radu/code/react-datagrid/src/Row/index.jsx",
		"/home/radu/code/react-datagrid/index.jsx",
		"/home/radu/code/react-datagrid/node_modules/react/lib/ReactOwner.js",
		"/home/radu/code/react-datagrid/node_modules/webpack/lib/dependencies/ContextElementDependency.js",
		"/home/radu/code/react-datagrid/node_modules/http-server/node_modules/ecstatic/test/core-error.js",
		"/home/radu/code/react-datagrid/src/models/Column.js",
		"/home/radu/code/react-datagrid/src/index.jsx",
		"/home/radu/code/react-datagrid/node_modules/drag-helper/index.js",
		"/home/radu/code/react-datagrid/style/index.styl",
		"/home/radu/code/react-datagrid/webpack.config.js",
		"/home/radu/code/react-datagrid/dist.config.js",
		"/home/radu/code/react-datagrid/index.html",
		"/home/radu/code/react-datagrid/node_modules/webpack/lib/dependencies/RequireHeaderDependency.js",
		"/home/radu/code/react-datagrid/node_modules/webpack-dev-server/node_modules/socket.io/node_modules/socket.io-client/node_modules/xmlhttprequest/tests/test-headers.js",
		"/home/radu/code/react-datagrid/node_modules/react-load-mask/node_modules/http-server/node_modules/union/test/header-test.js",
		"/home/radu/code/react-datagrid/node_modules/http-server/node_modules/union/test/header-test.js",
		"/home/radu/code/react-datagrid/style/header.styl",
		"/home/radu/code/react-datagrid/node_modules/webpack/lib/web/WebEnvironmentPlugin.js",
		"/home/radu/code/react-datagrid/style/constants.styl",
		"/home/radu/code/react-datagrid/node_modules/gulp-react/node_modules/react-tools/node_modules/commoner/node_modules/install/node_modules/whiskey/example/test-long-running-1.js",
		"/home/radu/code/react-datagrid/node_modules/webpack/node_modules/node-libs-browser/node_modules/constants-browserify/build.sh",
		"/home/radu/code/react-datagrid/index.styl",
		"/home/radu/code/react-datagrid/node_modules/gulp/completion/zsh",
		"/home/radu/code/react-datagrid/src/Header/index.jsx",
		"/home/radu/code/react-datagrid/src/render/renderMenu.jsx",
		"/home/radu/code/react-datagrid/src/Header/setupColumnResize.js",
		"/home/radu/code/react-datagrid/src/render/slice.js",
		"/home/radu/code/react-datagrid/src/render/renderGroupedTable.jsx",
		"/home/radu/.bash_profile",
		"/home/radu/.config/sublime-text-3/Cache/Color Scheme - Default/Monokai.tmTheme.cache",
		"/home/radu/bin/s",
		"/home/radu/bin/chrome",
		"/home/radu/.bashrc",
		"/bin/s",
		"/home/radu/code/react-datagrid/node_modules/react/lib/ReactEmptyComponent.js",
		"/home/radu/code/react-datagrid/node_modules/react/lib/ReactMount.js",
		"/home/radu/code/react-datagrid/react-datagrid.sublime-project",
		"/home/radu/code/react-datagrid/README.md",
		"/home/radu/code/react-datagrid/node_modules/gulp/node_modules/minimist/test/stop_early.js",
		"/home/radu/code/react-datagrid/src/utils/group.js",
		"/home/radu/code/react-datagrid/node_modules/react/lib/ReactNativeComponent.js",
		"/home/radu/code/react-datagrid/src/Wrapper/Table.jsx",
		"/home/radu/code/react-datagrid/node_modules/gulp/node_modules/vinyl-fs/node_modules/glob-watcher/node_modules/gaze/node_modules/globule/node_modules/lodash/dist/lodash.compat.js",
		"/home/radu/code/react-datagrid/node_modules/react/lib/getReactRootElementInContainer.js",
		"/home/radu/code/react-datagrid/node_modules/gulp-react/node_modules/react-tools/src/test/ReactPerf.js",
		"/home/radu/code/react-datagrid/src/Wrapper/renderMenu.jsx",
		"/home/radu/code/react-datagrid/src/Wrapper/renderRow.jsx",
		"/home/radu/code/react-datagrid/style/contents.styl",
		"/home/radu/code/react-datagrid/style/borders.styl",
		"/home/radu/code/react-datagrid/node_modules/stylus-loader/node_modules/stylus/node_modules/glob/test/zz-cleanup.js",
		"/home/radu/code/react-datagrid/node_modules/webpack/node_modules/node-libs-browser/node_modules/browserify-zlib/test/test-zlib-convenience-methods.js",
		"/home/radu/code/react-datagrid/src/utils/findIndexByName.js",
		"/home/radu/code/react-datagrid/src/Wrapper/tableStyle.js",
		"/home/radu/code/react-datagrid/src/utils/getDataForGroup.js",
		"/home/radu/code/react-datagrid/src/utils/findIndexBy.js",
		"/home/radu/code/react-datagrid/node_modules/gulp/completion/fish",
		"/home/radu/code/react-datagrid/node_modules/css-utils/styles/utils-ellipsis.styl",
		"/home/radu/code/react-datagrid/node_modules/gulp-react/node_modules/react-tools/src/browser/syntheticEvents/__tests__/SyntheticEvent-test.js",
		"/home/radu/code/react-datagrid/style/summary.styl",
		"/home/radu/code/react-datagrid/src/utils/asArray.js",
		"/home/radu/code/react-datagrid/node_modules/webpack-dev-server/node_modules/socket.io/node_modules/socket.io-client/node_modules/active-x-obfuscator/node_modules/zeparser/test-tokenizer.html",
		"/home/radu/code/react-datagrid/node_modules/webpack-dev-server/node_modules/socket.io/node_modules/socket.io-client/node_modules/active-x-obfuscator/node_modules/zeparser/test-parser.html",
		"/home/radu/code/react-datagrid/node_modules/http-server/node_modules/optimist/node_modules/wordwrap/test/wrap.js",
		"/home/radu/code/react-datagrid/node_modules/gulp/node_modules/vinyl-fs/node_modules/graceful-fs/test/write-then-read.js",
		"/home/radu/code/react-datagrid/lib/index.js",
		"/home/radu/code/react-datagrid/loaders.config.js",
		"/home/radu/code/react-datagrid/node_modules/copy-utils/copyList.js",
		"/home/radu/code/react-datagrid/src/PropTypes.js",
		"/home/radu/code/react-datagrid/node_modules/webpack/node_modules/enhanced-resolve/lib/FileAppendPlugin.js",
		"/home/radu/code/react-datagrid/node_modules/gulp/node_modules/orchestrator/node_modules/end-of-stream/node_modules/once/node_modules/wrappy/wrappy.js",
		"/home/radu/code/react-datagrid/node_modules/webpack/node_modules/watchpack/node_modules/chokidar/node_modules/readdirp/stream-api.js",
		"/home/radu/code/react-datagrid/src/Column/index.jsx",
		"/home/radu/code/react-datagrid/node_modules/jsx-loader/node_modules/react-tools/node_modules/commoner/node_modules/q/benchmark/compare-with-callbacks.js",
		"/home/radu/code/react-datagrid/node_modules/react/lib/getUnboundedScrollPosition.js",
		"/home/radu/code/react-datagrid/node_modules/stylus-loader/node_modules/stylus/node_modules/sax/test/script.js",
		"/home/radu/code/react-datagrid/node_modules/gulp/node_modules/chalk/node_modules/.bin/supports-color",
		"/home/radu/code/react-datagrid/Gulpfile.js",
		"/home/radu/code/react-datagrid/node_modules/stylus-loader/node_modules/stylus/node_modules/sax/test/buffer-overrun.js",
		"/home/radu/code/react-datagrid/node_modules/webpack/bin/config-optimist.js",
		"/home/radu/code/react-datagrid/dist.min.config.js",
		"/home/radu/code/react-datagrid/node_modules/react/lib/getEventTarget.js",
		"/home/radu/code/react-datagrid/node_modules/gulp/node_modules/minimist/test/default_bool.js",
		"/home/radu/code/react-datagrid/node_modules/webpack/lib/DefinePlugin.js",
		"/home/radu/code/react-datagrid/node_modules/react/lib/DefaultEventPluginOrder.js",
		"/home/radu/code/entity-designer/src/resources/css/widgets/SplitContainer.styl",
		"/home/radu/code/entity-designer/src/js/render/render.js",
		"/home/radu/code/entity-designer/README.md",
		"/home/radu/code/entity-designer/entity-designer.sublime-project",
		"/home/radu/code/entity-designer/src/js/runtime/widgets/TextField/actions.js",
		"/home/radu/code/entity-designer/src/resources/css/Item.styl",
		"/home/radu/code/entity-designer/index.html",
		"/home/radu/code/entity-designer/src/js/runtime/widgets/SplitContainer/actions.js",
		"/home/radu/code/entity-designer/src/js/preview/Previewer.jsx",
		"/home/radu/code/entity-designer/src/js/widgets/base/WidgetMixin.js",
		"/home/radu/code/entity-designer/src/js/widgets/TabPanel/index.js",
		"/home/radu/code/entity-designer/src/js/preview/utils/traverse.js",
		"/home/radu/code/entity-designer/src/js/runtime/widgets/TabPanel/actions.js",
		"/home/radu/code/entity-designer/lib/ui/TabPanel/index.jsx",
		"/home/radu/code/entity-designer/src/resources/css/widgets/TabPanel.styl",
		"/home/radu/code/entity-designer/src/js/model/factories/TabPanel.js",
		"/home/radu/code/entity-designer/lib/widget/Manager/traverse.js",
		"/home/radu/code/entity-designer/src/js/render/getItemAnchor.js",
		"/home/radu/code/entity-designer/src/js/render/getItemComponent.js",
		"/home/radu/code/entity-designer/src/js/render/getSnapRegions.js",
		"/home/radu/code/entity-designer/src/js/runtime/config.js",
		"/home/radu/code/entity-designer/src/js/runtime/widgets/TextField/index.jsx",
		"/home/radu/code/entity-designer/src/js/runtime/widgets/TabPanel/index.styl",
		"/home/radu/code/entity-designer/src/resources/css/widgets/index.styl",
		"/home/radu/code/entity-designer/src/js/runtime/index.js",
		"/home/radu/code/entity-designer/src/js/runtime/utils/traverse.js",
		"/home/radu/code/entity-designer/lib/ui/SplitContainer/index.jsx",
		"/home/radu/code/entity-designer/src/js/widgets/SplitContainer/index.js",
		"/home/radu/code/entity-designer/src/js/widgets/TabPanel/props.js",
		"/home/radu/code/entity-designer/src/js/runtime/widgets/SplitContainer/index.jsx",
		"/home/radu/code/entity-designer/src/js/runtime/widgets/Label/index.styl",
		"/home/radu/code/entity-designer/src/js/data/DataManager.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"/home/radu/code/react-datagrid/src",
			"/home/radu/code/react-datagrid",
			"/home/radu/code/react-datagrid/src",
			"/home/radu/code/react-datagrid/style",
			"/home/radu/code/react-datagrid/style; *.styl",
			"/home/radu/code/react-datagrid/style",
			"/home/radu/code/entity-designer/src/",
			"/home/radu/code/entity-designer/src/resources/,*.styl",
			"/home/radu/code/entity-designer/resources/,*.styl",
			"/home/radu/code/entity-designer/src/,*.jsx, *.js",
			"/home/radu/code/entity-designer/src/widgets/props,*.jsx, *.js",
			"/home/radu/code/entity-designer/src,*.jsx, *.js",
			"/home/radu/code/entity-designer/lib,*.jsx, *.js",
			"/home/radu/code/entity-designer/src,*.jsx, *.js",
			"/home/radu/code/entity-designer/node_modules/traceur-loader,*.jsx, *.js",
			"/home/radu/code/entity-designer/node_modules/traceur-runtime,*.jsx, *.js",
			"/home/radu/code/entity-designer/node_modules/traceur-*,*.jsx, *.js",
			"/home/radu/code/entity-designer/src,*.jsx, *.js",
			"/home/radu/code/entity-designer/lib,*.jsx, *.js",
			"/home/radu/code/entity-designer/src,*.jsx, *.js",
			"/home/radu/code/entity-designer/,*.jsx, *.js",
			"/home/radu/code/entity-designer/lib,*.jsx, *.js",
			"/home/radu/code/entity-designer/,*.jsx, *.js",
			"/home/radu/code/entity-designer/src,*.jsx, *.js",
			"/home/radu/code/entity-designer/,*.jsx, *.js",
			"/home/radu/code/entity-designer/src,*.jsx, *.js",
			"/home/radu/code/entity-designer/lib/ui/,*.jsx, *.js",
			"/home/radu/code/entity-designer/lib/ui/**.*",
			"/home/radu/code/entity-designer/lib/ui/*.*",
			"/home/radu/code/entity-designer/lib/ui",
			"/home/radu/code/entity-designer/src",
			"/home/radu/code/entity-designer/",
			"/home/radu/code/entity-designer/src",
			"/home/radu/code/entity-designer/lib",
			"/home/radu/code/entity-designer/src/js",
			"/home/radu/code/entity-designer/",
			"/home/radu/code/entity-designer/lib/widget",
			"/home/radu/code/entity-designer/lib",
			"/home/radu/code/entity-designer/src/js",
			"/home/radu/code/entity-designer/",
			"/home/radu/code/entity-designer/src/js",
			"/home/radu/code/entity-designer/",
			"/home/radu/code/entity-designer/src/js",
			"/home/radu/code/entity-designer/",
			"/home/radu/code/entity-designer/src/js",
			"/home/radu/code/entity-designer/",
			"/home/radu/code/entity-designer/src/js",
			"/home/radu/code/entity-designer/src",
			"/home/radu/code/entity-designer/",
			"/home/radu/code/entity-designer/src",
			"/home/radu/code/entity-designer",
			"/home/radu/code/entity-hapi/logs",
			"/home/radu/code/entity-hapi",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"scrollby",
			"rowHeight",
			"scrollby",
			"virtualrender",
			"column.render",
			"nestingWidth",
			"rendercell",
			"renderTable",
			"rendertab",
			"cellFactory",
			"renderRows(",
			"slice",
			"renderTable(",
			"renderrows(",
			"renderTable(",
			"slice",
			"getGroupedRows",
			"innerStyle",
			"idProperty",
			"idproper",
			"renderTable",
			"renderText",
			"console",
			"handleMouseUp",
			"handleFilterClick",
			"console.",
			"handleMouseUp",
			"handleMouseDown",
			"handleClick",
			"handleMouseDown",
			"handleResizeMouseDown",
			"event.nativeEvent.resizing",
			"setupColumnResize",
			"setupColumnDrag",
			"getDropState",
			"dragging",
			"diddrag",
			"di",
			"diddrag",
			"dragging",
			"handleClick",
			"handleClick:",
			"onColumnOrderChange",
			"onColumnOrderChange:",
			"onColumnOrderChange",
			"onDropColumn:",
			"onDropColumn",
			"toggleSort",
			"onDrop",
			"onDropColumn",
			"onColumnOrderChange",
			"sort",
			"onSortChange",
			"sort",
			"mouseover",
			"mouseOver",
			"handleMouseOver",
			"getVisibleCount",
			"toggleColumn",
			"c.vi",
			"getVisibleCount",
			"togglecolumn",
			"showcolumn",
			"renderTable",
			"preparewra",
			"prepareHeader",
			"prepareWrapper",
			"showMenu",
			"prepareHeader",
			"renderTable",
			"rendertable",
			"menucolumn",
			"rendertable",
			"allcolumns",
			"prepareProps",
			"prepareColumns",
			"prepareprops",
			"rendertab",
			"rendertabl",
			"groupData",
			"props",
			"groupdata",
			"prepareColumns",
			"toggleColumn",
			"prepareprops",
			"groupData",
			"prepareProps",
			"render:",
			"prepareprops",
			"CellFactory",
			"this.state.props",
			"prepareprops",
			"prepareProps",
			"prepareprops",
			"groupedRows",
			"renderGroupedTable",
			"groupedRows",
			"getGroupedRows",
			"renderTable",
			"renderGroupedTable",
			"console.",
			"console",
			"rendergro",
			"renderGroupedTable",
			"rendergro",
			"prepareData",
			"console.log",
			"prepareData",
			"getrendere",
			"this.state",
			"getRenderEndIndex",
			"prepareWrapper",
			"this.state",
			"getRenderEndIndex",
			"this.state.pr",
			"setstate",
			"getRenderEndIndex",
			"props",
			"state.props",
			"debugge",
			"renderTable",
			"handleScrollTop",
			"onscrolltop",
			"var len",
			"getRenderEndIndex",
			"renderstarti",
			"startindex",
			"this.groupsCount"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/index.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13054,
						"regions":
						{
						},
						"selection":
						[
							[
								1007,
								1007
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 372.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/getDefaultProps.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 804,
						"regions":
						{
						},
						"selection":
						[
							[
								189,
								189
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10162,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										152,
										164
									],
									[
										438,
										450
									],
									[
										606,
										618
									],
									[
										809,
										822
									],
									[
										865,
										878
									],
									[
										1106,
										1114
									],
									[
										1168,
										1176
									],
									[
										1356,
										1364
									],
									[
										1558,
										1566
									],
									[
										1881,
										1889
									],
									[
										1943,
										1951
									],
									[
										2110,
										2118
									],
									[
										2311,
										2319
									],
									[
										2695,
										2704
									],
									[
										2911,
										2920
									],
									[
										3141,
										3150
									],
									[
										3433,
										3442
									],
									[
										3555,
										3564
									],
									[
										3930,
										3939
									],
									[
										4136,
										4145
									],
									[
										4266,
										4275
									],
									[
										4401,
										4410
									],
									[
										4534,
										4543
									],
									[
										4684,
										4693
									],
									[
										4866,
										4875
									],
									[
										5098,
										5107
									],
									[
										5381,
										5390
									],
									[
										5605,
										5614
									],
									[
										5749,
										5758
									],
									[
										5950,
										5959
									],
									[
										5967,
										5976
									],
									[
										6210,
										6219
									],
									[
										6229,
										6238
									],
									[
										6535,
										6544
									],
									[
										6751,
										6760
									],
									[
										6981,
										6990
									],
									[
										7273,
										7282
									],
									[
										7395,
										7404
									],
									[
										7770,
										7779
									],
									[
										7976,
										7985
									],
									[
										8106,
										8115
									],
									[
										8241,
										8250
									],
									[
										8374,
										8383
									],
									[
										8524,
										8533
									],
									[
										8706,
										8715
									],
									[
										8938,
										8947
									],
									[
										9221,
										9230
									],
									[
										9445,
										9454
									],
									[
										9589,
										9598
									],
									[
										9790,
										9799
									],
									[
										9807,
										9816
									],
									[
										10050,
										10059
									],
									[
										10069,
										10078
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								8942,
								8942
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 6,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4194.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/Wrapper/index.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5240,
						"regions":
						{
						},
						"selection":
						[
							[
								511,
								511
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/render/renderRow.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1270,
						"regions":
						{
						},
						"selection":
						[
							[
								334,
								334
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/Cell/index.jsx",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2187,
						"regions":
						{
						},
						"selection":
						[
							[
								16,
								16
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/render/renderTable.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 636,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		},
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "src/Header/index.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10317,
						"regions":
						{
						},
						"selection":
						[
							[
								1231,
								1231
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 687.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "index.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11202,
						"regions":
						{
						},
						"selection":
						[
							[
								10732,
								10732
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2160.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/render/slice.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 243,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/render/getGroupedRows.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2048,
						"regions":
						{
						},
						"selection":
						[
							[
								755,
								755
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/Row/index.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3035,
						"regions":
						{
						},
						"selection":
						[
							[
								2163,
								2163
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1155.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/PropTypes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1104,
						"regions":
						{
						},
						"selection":
						[
							[
								244,
								244
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/render/renderTable.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 636,
						"regions":
						{
						},
						"selection":
						[
							[
								457,
								457
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.571871127633,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clipboard_manager":
	{
		"height": 118.0
	},
	"output.exec":
	{
		"height": 328.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haskell_sublime_load":
	{
		"height": 118.0
	},
	"project": "react-datagrid.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"prop",
				"src/PropTypes.js"
			],
			[
				"gdp",
				"src/getDefaultProps.js"
			],
			[
				"rendertab",
				"src/render/renderTable.jsx"
			],
			[
				"renderrow",
				"src/render/renderRow.jsx"
			],
			[
				"rendert",
				"src/render/renderTable.jsx"
			],
			[
				"getgro",
				"src/render/getGroupedRows.jsx"
			],
			[
				"getgrou",
				"src/render/getGroupedRows.jsx"
			],
			[
				"rowindex",
				"src/Row/index.jsx"
			],
			[
				"cell",
				"src/Cell/index.jsx"
			],
			[
				"index.jsx",
				"index.jsx"
			],
			[
				"pa",
				"package.json"
			],
			[
				"dist",
				"dist.config.js"
			],
			[
				"index",
				"src/index.jsx"
			],
			[
				"webp",
				"webpack.config.js"
			],
			[
				"index.s",
				"style/index.styl"
			],
			[
				"rendermenu",
				"src/render/renderMenu.jsx"
			],
			[
				"setupc",
				"src/Header/setupColumnResize.js"
			],
			[
				"setup",
				"src/Header/setupColumnDrag.js"
			],
			[
				"rendertable",
				"src/render/renderTable.jsx"
			],
			[
				"renderg",
				"src/Wrapper/renderGroupedTable.jsx"
			],
			[
				"gro",
				"src/utils/group.js"
			],
			[
				"renderow",
				"src/Wrapper/renderRow.jsx"
			],
			[
				"grou",
				"src/utils/group.js"
			],
			[
				"content",
				"style/contents.styl"
			],
			[
				"header",
				"style/header.styl"
			],
			[
				"gd",
				"src/getDefaultProps.js"
			],
			[
				"pac",
				"package.json"
			],
			[
				"findi",
				"src/utils/findIndexByName.js"
			],
			[
				"headerin",
				"src/Header/index.jsx"
			],
			[
				"cellindex",
				"src/Cell/index.jsx"
			],
			[
				"column",
				"src/models/Column.js"
			],
			[
				"headerindex",
				"src/Header/index.jsx"
			],
			[
				"consta",
				"style/constants.styl"
			],
			[
				"wrapper",
				"src/Wrapper/index.jsx"
			],
			[
				"getd",
				"src/getDefaultProps.js"
			],
			[
				"colum",
				"src/models/Column.js"
			],
			[
				"loa",
				"loaders.config.js"
			],
			[
				"wrapperin",
				"src/Wrapper/index.jsx"
			],
			[
				"wrapin",
				"src/Wrapper/index.jsx"
			],
			[
				"rowi",
				"src/Row/index.jsx"
			],
			[
				"cellin",
				"src/Cell/index.jsx"
			],
			[
				"rowin",
				"src/Row/index.jsx"
			],
			[
				"pack",
				"package.json"
			],
			[
				"border",
				"style/borders.styl"
			],
			[
				"resize",
				"style/resize.styl"
			],
			[
				"getde",
				"src/getDefaultProps.js"
			],
			[
				"setu",
				"src/js/render/setupDrag.js"
			],
			[
				"rendere",
				"src/js/runtime/Renderer.jsx"
			],
			[
				"previe",
				"src/js/preview/Previewer.jsx"
			],
			[
				"wmi",
				"src/js/widgets/base/WidgetMixin.js"
			],
			[
				"preview",
				"src/js/preview/Previewer.jsx"
			],
			[
				"tabpan",
				"src/js/widgets/TabPanel/index.js"
			],
			[
				"getitemac",
				"src/js/runtime/utils/getItemActions.js"
			],
			[
				"renderer",
				"src/js/runtime/Renderer.jsx"
			],
			[
				"labelindex.s",
				"src/js/runtime/widgets/Label/index.styl"
			],
			[
				"prev",
				"src/js/preview/Previewer.jsx"
			],
			[
				"tabpa",
				"src/resources/css/widgets/TabPanel.styl"
			],
			[
				"propertym",
				"src/js/render/PropertyManager.js"
			],
			[
				"renderre",
				"src/js/runtime/Renderer.jsx"
			],
			[
				"create",
				"src/js/widgets/create.js"
			],
			[
				"createi",
				"src/js/render/createItem.js"
			],
			[
				"render",
				"src/js/render/render.js"
			],
			[
				"mixin",
				"src/js/render/mixin.js"
			],
			[
				"align",
				"src/js/views/items/AlignToolbox.jsx"
			],
			[
				"wm",
				"src/js/widgets/base/WidgetMixin.js"
			],
			[
				"elli",
				"src/js/widgets/props/style/ellipsis.js"
			],
			[
				"properti",
				"src/js/views/selected/Properties.jsx"
			],
			[
				"itemsma",
				"src/js/data/ItemsManager.js"
			],
			[
				"toolarea",
				"src/js/ToolArea.jsx"
			],
			[
				"desi",
				"src/js/Designer.jsx"
			],
			[
				"alignt",
				"src/js/views/items/AlignToolbox.jsx"
			],
			[
				"canva",
				"src/js/views/items/Canvas.jsx"
			],
			[
				"trav",
				"lib/widget/Manager/traverse.js"
			],
			[
				"datama",
				"src/js/data/DataManager.js"
			],
			[
				"index.",
				"index.html"
			],
			[
				"createite",
				"src/js/render/createItem.js"
			],
			[
				"snaponm",
				"src/js/render/snapOnMove.js"
			],
			[
				"getsnapi",
				"src/js/render/getSnapItems.js"
			],
			[
				"getsnap",
				"src/js/render/getSnapRegions.js"
			],
			[
				"snapto",
				"src/js/render/snapToGrid.js"
			],
			[
				"getsna",
				"src/js/render/getSnapRegions.js"
			],
			[
				"snapp",
				"src/js/views/items/Snapper.jsx"
			],
			[
				"snapm",
				"src/js/state/SnapManager.js"
			],
			[
				"snapin",
				"src/js/render/snap/index.js"
			],
			[
				"splitinde",
				"src/js/widgets/SplitContainer/index.js"
			],
			[
				"getsnapr",
				"src/js/render/getSnapRegions.js"
			],
			[
				"getrelativecanvasregion",
				"src/js/render/getRelativeCanvasRegion.js"
			],
			[
				"snaponr",
				"src/js/render/snapOnResize.js"
			],
			[
				"getregion",
				"src/js/render/getRegionInCanvas.js"
			],
			[
				"snaponre",
				"src/js/render/snapOnResize.js"
			],
			[
				"cratep",
				"src/js/render/createProxy.js"
			],
			[
				"itemsm",
				"src/js/data/ItemsManager.js"
			],
			[
				"stata",
				"src/js/state/StateManager.js"
			],
			[
				"statema",
				"src/js/state/StateManager.js"
			],
			[
				"canvas",
				"src/js/views/items/Canvas.jsx"
			],
			[
				"property",
				"src/js/render/PropertyManager.js"
			],
			[
				"items",
				"src/js/data/ItemsManager.js"
			],
			[
				"desig",
				"src/js/Designer.jsx"
			],
			[
				"scon",
				"src/resources/css/widgets/SplitContainer.styl"
			],
			[
				"design",
				"src/js/Designer.jsx"
			],
			[
				"overf",
				"src/js/widgets/props/style/overflow.js"
			],
			[
				"setupd",
				"src/js/render/setupDrag.js"
			],
			[
				"re",
				"src/js/render/render.js"
			],
			[
				"getitemc",
				"src/js/render/getItemComponent.js"
			],
			[
				"setud",
				"src/js/render/setupDrag.js"
			],
			[
				"tabpindex",
				"src/js/widgets/TabPanel/index.js"
			],
			[
				"tabp",
				"lib/ui/TabPanel/index.jsx"
			],
			[
				"clonei",
				"src/js/render/cloneItem.js"
			],
			[
				"genera",
				"src/js/model/item/generateId.js"
			],
			[
				"itemfa",
				"src/js/model/ItemFactory.js"
			],
			[
				"getitemco",
				"src/js/render/getItemComponent.js"
			],
			[
				"label",
				"src/js/widgets/Label/index.jsx"
			],
			[
				"clone",
				"src/js/model/clone.js"
			],
			[
				"position",
				"src/js/widgets/props/style/position.js"
			],
			[
				"marg",
				"src/js/widgets/props/style/margin.js"
			],
			[
				"tree",
				"src/resources/css/tree.styl"
			],
			[
				"tool",
				"src/js/ToolboxItem.jsx"
			],
			[
				"back",
				"src/js/widgets/props/style/background.js"
			],
			[
				"canv",
				"src/js/views/items/Canvas.jsx"
			],
			[
				"loader",
				"loaders.config.js"
			],
			[
				"selec",
				"src/js/data/SelectionManager.js"
			],
			[
				"factories",
				"src/js/model/factories/TabPanel.js"
			],
			[
				"define",
				"src/js/widgets/base/define.js"
			],
			[
				"defi",
				"src/js/widgets/base/define.js"
			],
			[
				"mapper",
				"src/js/widgets/mapper.js"
			],
			[
				"texta",
				"src/js/widgets/props/style/textAlign.js"
			],
			[
				"thela",
				"src/js/widgets/props/theLabel.js"
			],
			[
				"itempr",
				"src/resources/css/ItemProxy.styl"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"Zi",
				"~/code/ZippyUI/zippyui.sublime-project"
			],
			[
				"zi",
				"~/code/ZippyUI/zippyui.sublime-project"
			],
			[
				"dash",
				"~/code/dashcharts/dashcharts.sublime-project"
			],
			[
				"react-sp",
				"~/code/react-split-container/react-split-container.sublime-project"
			],
			[
				"react-c",
				"~/code/react-color-picker/react-color-picker.sublime-project"
			],
			[
				"react-ta",
				"~/code/react-tab-panel/react-tab-panel.sublime-project"
			],
			[
				"split",
				"~/code/react-split-container/react-split-container.sublime-project"
			],
			[
				"react",
				"~/code/react-date-picker/react-date-picker.sublime-project"
			],
			[
				"date",
				"~/code/react-date-picker/react-date-picker.sublime-project"
			],
			[
				"react-date",
				"~/code/react-date-picker/react-date-picker.sublime-project"
			],
			[
				"i-",
				"~/code/i-s/is.sublime-project"
			],
			[
				"reg",
				"~/code/region/region.sublime-project"
			],
			[
				"css",
				"~/code/css-utils/css-utils.sublime-project"
			],
			[
				"ca",
				"~/code/project-radu-brehar/calorie-warn.sublime-project"
			],
			[
				"func",
				"~/code/functionally/functionally.sublime-project"
			],
			[
				"Z",
				"~/code/ZippyUI/zippyui.sublime-project"
			],
			[
				"react-f",
				"~/code/react-flex/react-flex.sublime-project"
			],
			[
				"copy",
				"~/code/copy-utils/copy-utils.sublime-project"
			],
			[
				"b",
				"~/code/blog/blog-posts.sublime-project"
			],
			[
				"blog",
				"~/code/radubrehar.github.io/blog-posts.sublime-workspace"
			],
			[
				"blo",
				"~/code/blog/blog-posts.sublime-project"
			],
			[
				"f",
				"~/code/functionally/functionally.sublime-project"
			],
			[
				"z",
				"~/code/ZippyUI/zippyui.sublime-project"
			],
			[
				"entity",
				"~/code/entity-hapi/entity-hapi.sublime-project"
			],
			[
				"",
				"~/code/i-s/is.sublime-project"
			],
			[
				"cl",
				"~/code/classy/classy.sublime-project"
			],
			[
				"a",
				"~/code/alchemy/alchemy.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 638.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 306.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
